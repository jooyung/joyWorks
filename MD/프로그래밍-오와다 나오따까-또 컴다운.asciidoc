[[_0_]]
= 또! 컴다운? (How Systems Go Down)
Joy <arbago@gmail.com>
v1.0, 2015-06-12
:icons: font
:sectanchors:
:imagesdir: images
:homepage: http://arbago.com
:toc: macro

toc::[]

[preface]
== 책

또! 컴다운?, 오와다 나오따까, 2009

[preface]
== 머릿말

사회 전체가 시스템이 안전하게 가동되는 것을 전제로 이루어져 있다고 해도 과언이 아닙니다

인터넷을 통해 이러 시트템이 서로 련결된 결과, 언제, 어느 시스템에 어느 정도의 액세스가 일어날지 예상할 수 없게 되었습니다

개발체제가 분업화되면서 시스템 전체를 파악하고 있는 IT 기술자가 점차 줄어들고 있는 것도 마이너스 요인인 것입니다

또한 고객의 요구에 발빠르게 대응해야 하기 때문에 시스템 개발에 걸리는 시간이 줄어들고 있다는 문제도 있습니다

24시간 가동이 당연시되어 테스트에 할당하는 시간도 줄어들고 있습니다

사람들은 보통 시스템은 '`정상으로 움직이는 것이 당연`'하다는 오해를 갖고 있습니다

가능한 한 많은 다운을 경험하는 것이 가장 좋습니다 +
하지만 한 사람의 기술자가 다운과 직면할 기회는 그리 많지 않습니다

[[_1_0_0_]]
== 01. 시스템이 멈췄다: '다운'이란 무엇인가

[[_1_1_1_]]
=== 01. 정지＝다운은 오해

[[_1_1_1_]]
==== 1. 단 하나의 실수가 치명타

[[_1_1_1_]]
==== 2. 예외 루트에 숨어 있는 함정

[[_1_1_1_]]
==== 3. 100% 막는 것은 무리라는 현실에 관심을 갖자

[[_1_1_1_]]
==== 4. 근본 원인을 찾아내기까지가 승부수

[[_1_2_2_]]
=== 02. 다운의 원인은 네 가지로 나눌 수 있다

[[_1_2_2_]]
==== 1. 다운 상황에 원인의 힌트가 숨겨져 있다

[[_1_2_2_]]
==== 2. 네 가지 문제가 연쇄히 일어나 ATM 11만 대에 영향을 주다

[[_2_0_2_]]
== 02. 제대로 테스트했을 텐데…: 애플리케이션 소프트웨어 문제

[[_2_1_3_]]
=== 01. 갑자기 눈을 뜨는 20세기 버그

[[_2_1_3_]]
==== 1. 시점을 바꾼 여덟 가지 테스트를 반복한다

[[_2_1_3_]]
==== 2. 아무리 테스트를 반복해도 버그는 남는다

[[_2_1_3_]]
==== 3. 설마 데이터 복구 프로그램이 전체 데이터를 삭제하다니

[[_2_1_3_]]
==== 4. 하나의 버그가 400억엔(약 4,000억원)의 손실로

[[_2_1_3_]]
==== 5. 5개의 조건이 가동한 지 6년째에 처음으로 일치하다

[[_2_1_3_]]
==== 6. 정지시키지 않은 것이 화근이었다

[[_2_1_3_]]
==== 7. '데이터 이전'은 범인 찾기가 어려워

[[_2_1_3_]]
==== 8. 회귀 테스트로 찾을 수 없어

[[_2_2_4_]]
=== 02. 잊어버릴만 하면 찾아오는 '날짜 문제'

[[_2_2_4_]]
==== 1. 윤년의 19년 전은 윤년일까?

[[_2_2_4_]]
==== 2. 2100년 2월 28일에 큰 트러블이

[[_2_2_4_]]
==== 3. 34년 먼저 발생한 '2038년 문제'

[[_2_2_4_]]
==== 4. '30%만 이상'이라 찾기 힘들다

[[_2_2_4_]]
==== 5. 자리 넘침으로 '2001년 9월 9일 문제' 발생

[[_2_2_4_]]
==== 6. 2036년을 주목하자

[[_2_2_4_]]
==== 7. 날짜 문제가 아닌 '자리 넘침' 문제도

[[_2_3_5_]]
=== 03. 데이터베이스의 데드락이 연속 발생

[[_2_3_5_]]
==== 1. 먼저 들어오는 사람이 이기는 '배타제어'

[[_2_3_5_]]
==== 2. 잠금 순서가 뒤바뀌면 '무한 대기 상태'를 초래한다

[[_2_3_5_]]
==== 3. 연속 발생이 다운으로 이어진다

[[_2_3_5_]]
==== 4. '제어용' 데이터베이스에 주의하자

[[_2_3_5_]]
==== 5. 일부 다운과 전면 다운의 갈림길

[[_2_3_5_]]
==== 6. 팀끼리 작성 규칙이 통일되지 않았다

[[_2_3_5_]]
==== 7. 부하 테스트를 깜빡 잊고 빠뜨림

[[_2_3_5_]]
==== COLUMN 여기는 시스템 다운 상담실: 트러블 대책에 쫓기는 개발 기술자

[[_3_0_5_]]
== 03. 애플리케이션뿐만이 아니다: OS, 미들웨어의 이상

[[_3_1_6_]]
=== 01. 정지를 감지 못하다

[[_3_1_6_]]
==== 1. 블랙박스의 무서움

[[_3_1_6_]]
==== 2. 다섯 종류의 이중화의 차이를 알자

[[_3_1_6_]]
==== 3. 다잉 메시지를 캐치 못하고

[[_3_1_6_]]
==== 4. 클러스터 소프트웨어가 작동하지 않아

[[_3_2_7_]]
=== 02. 조합을 바꿨더니 움직이지 않는다

[[_3_2_7_]]
==== 1. 동일 업체의 소프트웨어인데도 궁합이 나쁘다니

[[_3_2_7_]]
==== 2. 업무 애플리케이션과 OS의 조합 검증이 누락

[[_3_2_7_]]
==== 3. 패치 적용이나 버전업에 리스크 있음

[[_3_2_7_]]
==== 4. 오래된 소프트웨어와 최신판 중 무엇을 고를까?

[[_3_2_7_]]
==== 5. 실적으로 고른 메인 프레임 제품에 버그

[[_3_2_7_]]
==== 6. 성능이 너무 높아져 15년 전의 문제가 드러남

[[_3_2_7_]]
==== 7. 검증 책임은 리용자에게 있다

[[_3_3_8_]]
=== 03. 메모리를 잡은 채로 놓지 않는다

[[_3_3_8_]]
==== 1. 오픈 시스템은 원인 구분이 어렵다

[[_3_3_8_]]
==== 2. '계속 사용 중'이 다운으로 이어진다

[[_3_3_8_]]
==== 3. C 언어뿐만 아니다

[[_3_3_8_]]
==== 4. 소프트웨어에 이중화는 적용되지 않는다

[[_4_0_8_]]
== 04. 접속 쇄도를 견디지 못하고…: 성능 및 용량 부족 문제

[[_4_1_9_]]
=== 01. 하드웨어의 성능을 다 살릴 수 없다

[[_4_1_9_]]
==== 1. 타임아웃이 만연하는 실상

[[_4_1_9_]]
==== 2. 원인은 하드웨어 자원 부족만이 아니다

[[_4_1_9_]]
==== 3. 시스템 성능을 좌우하는 소프트웨어 자원

[[_4_1_9_]]
==== 4. 파라미터 설정은 균형이 중요

[[_4_1_9_]]
==== 5. 웹 서버의 소프트웨어 자원 부족으로 처리 지연

[[_4_1_9_]]
==== 6. 과부하 상태에서만 발생하는 문제

[[_4_1_9_]]
==== 7. 하드웨어 증강 시 재점검을 잊어버리다

[[_4_1_9_]]
==== 8. 재시도를 100번 반복했더니 다운

[[_4_1_9_]]
==== 9. 발단은 단 하나의 확장 누락

[[_4_1_9_]]
==== 10. 테스트 방법이 확립되지 않은 것이 화근

[[_4_2_10_]]
=== 02. 메모리와 CPU가 부족하다

[[_4_2_10_]]
==== 1. 성능 설계 실수로 가동 첫 날 응답 저하

[[_4_2_10_]]
==== 2. 애플리케이션이 너무 많아서 메모리 부족으로

[[_4_2_10_]]
==== 3. 액세스 증가가 CPU의 성능 부족을 일으킨다

[[_4_2_10_]]
==== 4. 무한 루프가 리소스 부족으로 이어진다

[[_4_2_10_]]
==== 5. 4대 중 3대가 고장나도 75% 성능을 유지하는 구성

[[_4_3_11_]]
=== 03. 통신 데이터 증가가 다운을 초래한다

[[_4_3_11_]]
==== 1. 통신 대혼란을 야기한 L3 스위치 1대의 고장

[[_4_3_11_]]
==== 2. '메인', '보조'여야 하는데 2대 모두 '메인'으로

[[_4_3_11_]]
==== 3. 펌웨어 문제로 '루프'가 발생

[[_4_3_11_]]
==== 4. 무서운 통신 데이터 '폭주'

[[_4_3_11_]]
==== 5. 라우터의 경로 정보가 갱신되지 않는다

[[_4_3_11_]]
==== 6. 데이터 집중으로 서버가 정지

[[_4_4_12_]]
=== 04. 데이터베이스가 가득 차서

[[_4_4_12_]]
==== 1. 거래 증가로 로그 파일이 펑크 직전

[[_4_4_12_]]
==== 2. 빈 공간이 있는데도 용량 부족이 되는 경우도

[[_4_4_12_]]
==== 3. 배치 처리의 파일 용량이 병목 현상을

[[_4_4_12_]]
==== 4. 배치 처리가 원인으로 온라인을 긴급 정지

[[_4_5_13_]]
=== 05. 날이 새도 끝나지 않는 배치 처리

[[_4_5_13_]]
==== 1. ETC와 전자화폐와 배치 처리의 밀접한 관계

[[_4_5_13_]]
==== 2. 오픈화로 확장성 확보가 진행된다

[[_4_5_13_]]
==== 3. 너무 빨리 끝나 '이상'으로 오인

[[_4_5_13_]]
==== COLUMN 여기는 시스템 다운 상담실: 운용 담당자는 혼나는 역할? : 개인을 추궁해도 다운은 줄지 않는다

[[_5_0_13_]]
== 05. '몰랐다'는 허용되지 않는다: 환경설정 및 변경 실수

[[_5_1_14_]]
=== 01. 깜빡 잊어버린 파라미터 변경

[[_5_1_14_]]
==== 1. 8년만의 단말기 추가에 함정이

[[_5_1_14_]]
==== 2. 1년전의 설정 오류가 표면화되어 전철이 긴급 정지

[[_5_1_14_]]
==== 3. 국가 시험 합격자가 불합격으로

[[_5_1_14_]]
==== 4. 테스트에서 발견되지 않은 경우가 대부분

[[_5_2_15_]]
=== 02. 시스템 환경의 변경 실수

[[_5_2_15_]]
==== 1. 데이터의 저장 위치를 정리했더니 다운

[[_5_2_15_]]
==== 2. 메인 서버에서 버그 수정, 모듈 등록에 누락

[[_5_2_15_]]
==== 3. 절차 위반이 라이브러리 관리 실수를 초래

[[_5_2_15_]]
==== 4. 잘못해서 구버전을 사용하다

[[_5_2_15_]]
==== 5. 리허설 후에 환경 되돌리기 작업을 잘못함

[[_5_3_16_]]
=== 03. 패치 파일의 적용을 잊어버림

[[_5_3_16_]]
==== 1. 다운으로 이어지는 중요한 문제를 방치

[[_5_3_16_]]
==== 2. 제조업체의 경고를 무시하다

[[_5_3_16_]]
==== 3. 무시하기 쉬운 보수 지원 체제 확립

[[_5_4_17_]]
=== 04. 달력 설정 실수

[[_5_4_17_]]
==== 1. 요일과 날에 따라 다른 운전 시간과 배치 처리

[[_5_4_17_]]
==== 2. 일요일과 월말이 겹쳐져 문제 발생

[[_5_4_17_]]
==== 3. 조합 테스트로 막을 수 있다

[[_6_0_17_]]
== 06. '깜빡 실수'가 치명타: 운용 및 조작 실수

[[_6_1_18_]]
=== 01. 운용 명령을 잘못 내리다

[[_6_1_18_]]
==== 1. 운용 조작의 완전 자동화는 무리

[[_6_1_18_]]
==== 2. 개발 서버라고 착각하여 운용 서버를 오작동

[[_6_1_18_]]
==== 3. 안내 표시가 효과 없이 ATM 4,000여 대가 정지

[[_6_1_18_]]
==== 4. 두 가지 삭제 명령의 사용 구분을 잘못함

[[_6_1_18_]]
==== 5. 다중 확인이나 사전 체크에도 한계가

[[_6_2_19_]]
=== 02. 데이터 이전 및 입력 실수

[[_6_2_19_]]
==== 1. 버그가 없는데 신구 시스템의 결과가 맞지 않는다

[[_6_2_19_]]
==== 2. 누락되기 쉬운 부분 데이터의 병행 갱신

[[_6_2_19_]]
==== 3. 위험한 작업은 잊어버릴만 하면 찾아온다

[[_6_2_19_]]
==== 4. 리용자의 데이터 입력 실수가 원인인 경우도

[[_6_2_19_]]
==== 5. 연금기록 문제는 질나쁜 실수의 전형한 례

[[_6_3_20_]]
=== 03. 보조 시스템의 전환이 실패

[[_6_3_20_]]
==== 1. 데이터베이스가 메인 시스템과 일치하지 않고

[[_6_3_20_]]
==== 2. 자동으로 전환된다고 착각

[[_6_3_20_]]
==== 3. 다운되지 않았는데 전환시키는 '반대 발상'

[[_6_4_21_]]
=== 04. 혼란이 '2차 재해'를 낳아 피해 확대

[[_6_4_21_]]
==== 1. 3대 대형 은행에서 있었던 '중복 인출' 사건

[[_6_4_21_]]
==== 2. 데이터 입력의 중복 조작이 발생

[[_6_4_21_]]
==== 3. 혼란 시에 일어나기 쉬운 'JCL' 변경 실수

[[_6_4_21_]]
==== 4. '복구용 기능이 없다'고 후회해도 소용없다

[[_7_0_21_]]
== 07. 설마 이런 일이: 하드웨어 고장 및 불의의 사고

[[_7_1_22_]]
=== 01. 서버가 고장났다

[[_7_1_22_]]
==== 1. 대형 서버는 내부 회로까지 완전 이중화

[[_7_1_22_]]
==== 2. 있을 수 없는 2대 동시 고장이 현실로

[[_7_1_22_]]
==== 3. 교체하기 10일 전에 고장

[[_7_1_22_]]
==== 4. 디스크 장치의 동시 고장에 대비하는 'RAID6'

[[_7_2_23_]]
=== 02. 통신 네트워크가 불통

[[_7_2_23_]]
==== 1. L3 스위치가 가동 500일째 고장

[[_7_2_23_]]
==== 2. WAN 서비스 정지로 ATM 600대가 정지

[[_7_2_23_]]
==== 3. 케이블 절단이나 포트 접속 불량도

[[_7_2_23_]]
==== 4. 지상 케이블은 지진에 약하다

[[_7_3_24_]]
=== 03. 컴퓨터, 전기가 없으면 그저 상자일뿐

[[_7_3_24_]]
==== 1. 전원장치에서 이중 고장이 발생

[[_7_3_24_]]
==== 2. 화재를 막기 위해 전력 공급을 중단

[[_7_3_24_]]
==== 3. 불과 1초의 정전으로 다운

[[_7_4_25_]]
=== 04. 지진으로 데이터 센터가 파괴 소실

[[_7_4_25_]]
==== 1. 때로는 일부러 복구시키지 않는 판단이 필요

[[_7_4_25_]]
==== 2. 화재로 담당자가 밖으로 피난, 운용 조작이 불가능

[[_7_4_25_]]
==== COLUMN 여기는 시스템 다운 상담실: 다운이 줄어서 곤란하다?

[[_8_0_25_]]
== 08. 트러블 대처는 시간과의 싸움: 다운에서 배운다

[[_8_1_26_]]
=== 01. 원인 규명보다는 복구를 우선

[[_8_1_26_]]
==== 1. 다운은 '나쁜 것'인가?

