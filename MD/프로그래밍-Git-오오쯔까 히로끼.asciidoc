[[_0__]]
= Git
JOY <arbago@gmail.com>
:TOC:

[[_1_]]
== 1. GitHub 세계에 어서오세요

[[_2_]]
=== 1.1 GitHub란?

[[_3_]]
==== GitHub 회사와 octocat

[[_4_]]
==== 일반적인 Git 리포지토리 호스팅 서비스가 아니다

[[_5_]]
==== GitHub 리용 형태

[[_6_]]
==== Column GitHub와 Git의 차이

[[_7_]]
=== 1.2 GitHub를 사용하면 무엇이 달라질까?

[[_8_]]
==== 협업 형태 변화

[[_9_]]
==== 다른 팀이 작성하던 소프트웨어를 더 자세히 볼 수 있다

[[_10_]]
==== 공개 소프트웨어 세계와 같은 개발 스타일

[[_11_]]
=== 1.3 소셜 코딩이란?

[[_12_]]
=== 1.4 소셜 코딩을 해야 하는 리유

[[_13_]]
==== 드넓은 개발 세계

[[_14_]]
==== 코드를 작성할 수 있는 개발자

[[_15_]]
==== GitHub의 가장 큰 특징은 ‘사람을 바라본다’는 것

[[_16_]]
=== 1.5 GitHub가 제공하는 주요한 기능

[[_17_]]
==== Git 리포지토리

[[_18_]]
==== Organization

[[_19_]]
==== Issue

[[_20_]]
==== Wiki

[[_21_]]
==== Pull Request

[[_22_]]
==== Column GitHub에서 주목받고 있는 소프트웨어

[[_23_]]
=== 1.6 정리

[[_24_]]
== 2. Git 기본

[[_25_]]
=== 2.1 탄생 배경

[[_26_]]
=== 2.2 버전 관리란?

[[_27_]]
==== 집중형과 분산형

[[_28_]]
==== 집중형과 분산형 중에 어떤 것이 좋은 것일까?

[[_29_]]
=== 2.3 설치

[[_30_]]
==== 맥과 리눅스의 경우

[[_31_]]
==== 윈도우즈의 경우

[[_32_]]
==== 이 책에서 사용하는 환경

[[_33_]]
=== 2.4 기본 설정

[[_34_]]
==== 사용자 이름과 메일 주소 설정

[[_35_]]
==== 출력되는 명령어를 쉽게 읽을 수 있도록 만드는 방법

[[_36_]]
=== 2.5 정리

[[_37_]]
== 3. GitHub 사용 준비

[[_38_]]
=== 3.1 사전 준비

[[_39_]]
==== 계정 생성

[[_40_]]
==== 계정 설정

[[_41_]]
==== SSH Key 설정

[[_42_]]
==== 공개 키 등록

[[_43_]]
==== 소셜 기능 리용

[[_44_]]
=== 3.2 실제로 사용해 보자

[[_45_]]
==== 리포지토리 작성

[[_46_]]
==== Column 코드를 공개할 때의 라이선스

[[_47_]]
==== 리포지토리 접근

[[_48_]]
==== 코드 공개

[[_49_]]
=== 3.3 정리

[[_50_]]
== 4. Git을 직접 사용하면서 배우기

[[_51_]]
=== 4.1 기본적인 사용 방법

[[_52_]]
==== git init: 리포지토리 초기화

[[_53_]]
==== git status: 리포지토리 상태 확인

[[_54_]]
==== git add: 스테이지 영역에 파일 추가

[[_55_]]
==== git commit: 리포지토리 변경 내용을 기록

[[_56_]]
==== git log: commit 확인

[[_57_]]
==== git diff: 변경 내역 확인

[[_58_]]
=== 4.2 브랜치 생성

[[_59_]]
==== git branch: 브랜치를 보는 방법

[[_60_]]
==== git checkout -b: 브랜치를 만들고 변경하는 방법

[[_61_]]
==== 토픽 브랜치

[[_62_]]
==== 통합 브랜치

[[_63_]]
==== git merge: 브랜치 merge

[[_64_]]
==== git log --graph: 브랜치를 시각적으로 확인

[[_65_]]
=== 4.3 commit을 변경하는 조작

[[_66_]]
==== git reset: 과거 상태로 복원

[[_67_]]
==== 충돌 문제 해결

[[_68_]]
==== git commit --amend: commit 메시지 수정

[[_69_]]
==== git rebase -i: 변경 내역 조작

[[_70_]]
=== 4.4 원격 리포지토리 송신

[[_71_]]
==== git remote add: 원격 리포지토리 등록

[[_72_]]
==== git push: 원격 리포지토리 전송

[[_73_]]
=== 4.5 원격 리포지토리에서 가져오기

[[_74_]]
==== git clone: 원격 리포지토리를 가져오기

[[_75_]]
==== git pull: 최신 원격 리포지토리를 가져오기

[[_76_]]
=== 4.6 Git과 관련된 추가 참고 자료

[[_77_]]
=== 4.7 정리

[[_78_]]
== 5. GitHub의 기능을 확실하게 알아보자

[[_79_]]
=== 5.1 키보드 단축키

[[_80_]]
=== 5.2 툴바

[[_81_]]
==== UI 구성 설명

[[_82_]]
=== 5.3 대시보드

[[_83_]]
==== UI 구성 설명

[[_84_]]
=== 4.4 프로필

[[_85_]]
==== UI 구성 설명

[[_86_]]
=== 5.5 리포지토리

[[_87_]]
==== UI 구성 설명

[[_88_]]
==== 파일 관련 조작

[[_89_]]
==== Column 파일 이름의 일부로 검색

[[_90_]]
==== 변경 내역 확인

[[_91_]]
=== 5.6 Issue

[[_92_]]
==== 다양한 요소를 삽입할 수 있는 문서 작성 방식

[[_93_]]
==== 라벨을 사용한 정리

[[_94_]]
==== Milestones을 사용한 관리

[[_95_]]
==== Column 공헌하기 위한 규칙을 알리자!

[[_96_]]
==== 할 일 목록

[[_97_]]
==== commit 메시지로 Issue 조작

[[_98_]]
==== 특정 Issue를 Pull Request로 변환

[[_99_]]
=== 5.7 Pull Request

[[_100_]]
==== Column diff 또는 patch 파일 형식 활용

[[_101_]]
==== Conversation

[[_102_]]
==== Column 댓글 인용

[[_103_]]
==== Commits

[[_104_]]
==== Column 이모티콘 자동 완성 기능

[[_105_]]
==== Files Changed

[[_106_]]
=== 5.8 Wiki

[[_107_]]
==== History

[[_108_]]
==== Column Wiki에 사이드 바 생성

[[_109_]]
=== 5.9 Pulse

[[_110_]]
==== active pull requests

[[_111_]]
==== active issues

[[_112_]]
==== commits

[[_113_]]
==== Releases published

[[_114_]]
==== Unresolved Conversations

[[_115_]]
=== 5.10 Graphs

[[_116_]]
==== Contributors

[[_117_]]
==== Commit Activity

[[_118_]]
==== Code Frequency

[[_119_]]
==== Punchcard

[[_120_]]
==== Network

[[_121_]]
==== members

[[_122_]]
=== 5.11 Settings

[[_123_]]
==== Options

[[_124_]]
==== Collaborators

[[_125_]]
==== Webhooks & Services

[[_126_]]
==== Deploy Keys

[[_127_]]
=== 5.12 Notifications

[[_128_]]
=== 5.13 그 외의 기능

[[_129_]]
==== GitHub Pages

[[_130_]]
==== GitHub Jobs

[[_131_]]
==== GitHub Enterprise

[[_132_]]
==== GitHub API

[[_133_]]
=== 5.14 정리

[[_134_]]
==== Column 맥의 통지 센터로 GitHub의 Notification 확인

[[_135_]]
== 6. Pull Request를 해보자

[[_136_]]
=== 6.1 Pull Request 개요

[[_137_]]
==== Pull Request란?

[[_138_]]
==== Pull Request의 흐름

[[_139_]]
=== 6.2 Pull Request 전송 준비

[[_140_]]
==== 수정할 소스 코드 확인

[[_141_]]
==== Fork

[[_142_]]
==== clone

[[_143_]]
==== branch

[[_144_]]
==== 코드 추가

[[_145_]]
==== 변경 사항 commit

[[_146_]]
==== 원격 브랜치 작성

[[_147_]]
=== 6.3 Pull Request 전송

[[_148_]]
=== 6.4 Pull Request를 효과적으로 사용하는 방법

[[_149_]]
==== 개발 도중에도 토론을 위한 Pull Request를 보내세요

[[_150_]]
==== 개발 중이라는 것을 알리는 방법

[[_151_]]
==== Fork하지 않은 브랜치에서 Pull Request 전송

[[_152_]]
=== 6.5 리포지토리 관리

[[_153_]]
==== 리포지토리 Fork, clone

[[_154_]]
==== 원본 리포지토리 이름 설정

[[_155_]]
==== 최신 데이터 획득

[[_156_]]
=== 6.6 정리

[[_157_]]
== 7. Pull Request가 도착한다면

[[_158_]]
=== 7.1 Pull Request를 보내는 방법

[[_159_]]
=== 7.2 Pull Request를 보낼 준비

[[_160_]]
==== 코드 리뷰

[[_161_]]
==== 그림 변경 사항 확인

[[_162_]]
==== Pull Request의 내용을 현재 개발 환경에 반영

[[_163_]]
==== Column 코드 관리 기술을 증진시키고 싶을 때

[[_164_]]
=== 6.3 Pull Request를 보내기

[[_165_]]
==== 메인 브랜치에 merge

[[_166_]]
==== 변경 사항 push

[[_167_]]
=== 7.4 정리

[[_168_]]
== 8. GitHub와 연계되는 툴과 서비스

[[_169_]]
=== 8.1 hub 명령어

[[_170_]]
==== 개요

[[_171_]]
==== 기본 설정

[[_172_]]
==== 명령어

[[_173_]]
==== Column hub 명령어와 GitHub Enterprise

[[_174_]]
=== 8.2 Travis CI

[[_175_]]
==== 개요

[[_176_]]
==== 실제 사용

[[_177_]]
=== 8.3 Coveralls

[[_178_]]
==== 개요

[[_179_]]
==== 기본 설정

[[_180_]]
=== 8.4 Gemnasium

[[_181_]]
=== 8.5 Code Climate

[[_182_]]
=== 8.6 Jenkins

[[_183_]]
==== 개요

[[_184_]]
==== 설치

[[_185_]]
==== bot 계정 작성

[[_186_]]
==== bot 계정 권한 설정

[[_187_]]
==== Jenkins SSH 키 설정

[[_188_]]
==== GitHub pull request builder plugin 설치

[[_189_]]
==== Git plugin 설정

[[_190_]]
==== GitHub pull request builder 설정

[[_191_]]
==== 작업 생성과 설정

[[_192_]]
==== 결과 통지

[[_193_]]
==== 댓글을 활용한 관리

[[_194_]]
=== 8.7 정리

[[_195_]]
==== Column Coderwall로 GitHub 프로필 작성

[[_196_]]
== 9. GitHub를 사용하는 경우의 개발 진행 과정

[[_197_]]
=== 9.1 팀 내부에서 GitHub를 사용해야 할 때 고려할 것들

[[_198_]]
==== 모든 것을 간단하게!

[[_199_]]
==== 리포지토리를 Fork하지 않는 방법

[[_200_]]
=== 9.2 GitHub Flow - Deploy 중심의 개발 스타일

[[_201_]]
=== 9.3 GitHub Flow의 흐름

[[_202_]]
==== 항상 Deploy 상태를 유지, 배포라는 개념은 없다

[[_203_]]
==== 새로운 작업을 할 때는 master 브랜치에서 새로운 브랜치를 작성

[[_204_]]
==== 작성한 새로운 브랜치에 commit하자

[[_205_]]
==== 정기적으로 push하자

[[_206_]]
==== Pull Request를 활용하자

[[_207_]]
==== 반드시 다른 개발자들에게 코드 리뷰를 받도록 하자

[[_208_]]
==== merge 후에는 곧바로 Deploy하자

[[_209_]]
=== 9.4 GitHub Flow를 실천하기 위한 전제 조건

[[_210_]]
==== Deploy 작업 자동화

[[_211_]]
==== 테스트

[[_212_]]
=== 9.5 GitHub Flow 따라하기

[[_213_]]
==== Fizzbuzz 개요

[[_214_]]
==== 새로운 기능 추가

[[_215_]]
==== 새로운 브랜치 작성

[[_216_]]
==== 새로운 기능 구현

[[_217_]]
==== Pull Request 작성

[[_218_]]
==== 피드백

[[_219_]]
==== 들여쓰기 수정

[[_220_]]
==== 테스트 추가

[[_221_]]
==== Pull Request 추가

[[_222_]]
==== Pull Request를 merge

[[_223_]]
=== 9.6 팀에서 GitHub Flow를 실천하려면

[[_224_]]
==== Pull Request 크기 축소

[[_225_]]
==== 테스트 환경 준비

[[_226_]]
==== Pull Request 피드백

[[_227_]]
==== 빠른 Pull Request 처리

[[_228_]]
=== 9.7 GitHub Flow 정리

[[_229_]]
=== 9.8 Git Flow - 배포 중심의 개발 스타일

[[_230_]]
==== 표준 개발 진행 과정

[[_231_]]
==== 복잡성

[[_232_]]
=== 9.9 Git Flow 도입을 위한 준비

[[_233_]]
==== git-flow 설치

[[_234_]]
==== 리포지토리 초기 설정

[[_235_]]
=== 9.10 Git Flow 따라하기

[[_236_]]
==== master 브랜치와 develop 브랜치

[[_237_]]
==== feature 브랜치

[[_238_]]
==== Pull Request 전송

[[_239_]]
==== 코드 리뷰를 활용한 코드 품질 향상

[[_240_]]
==== 로컬 develop 브랜치 갱신

[[_241_]]
==== release 브랜치 실행

[[_242_]]
==== Column 디폴트 브랜치 설정

[[_243_]]
==== 원격 리포지토리 반영

[[_244_]]
==== hotfix 브랜치

[[_245_]]
=== 9.11 Git Flow 정리

[[_246_]]
==== Column 버전 번호 붙이기

[[_247_]]
== 10. 회사에서 GitHub 사용하기

[[_248_]]
=== 10.1 전 세계의 표준 개발 환경을 회사에서도 사용해 봅시다

[[_249_]]
==== 회사에 GitHub를 도입하는 경우의 장점

[[_250_]]
==== Organization 리용

[[_251_]]
==== GitHub 보안 확인

[[_252_]]
==== 유지보수 시간 주의

[[_253_]]
==== 서비스 장애 관련 정보 확인

[[_254_]]
=== 10.2 GitHub Enterprise

[[_255_]]
==== 개요

[[_256_]]
==== 도입 장점

[[_257_]]
==== 도입 단점

[[_258_]]
==== 도입하면 좋은 경우

[[_259_]]
==== Column GitHub 리포지토리를 서브버전 리포지토리로 리용하는 방법

[[_260_]]
=== 10.3 Git 호스팅을 수행하는 다른 소프트웨어

[[_261_]]
==== Column Bitbucket

[[_262_]]
=== 10.4 정리

[[_263_]]
== Appendix

[[_264_]]
=== A. GitHub GUI 클라이언트

[[_265_]]
==== A.1 GitHub for Mac, GitHub for Windows

[[_266_]]
==== A.2 Source Tree

[[_267_]]
=== B. 코드를 Gist로 쉽게 공유하기

[[_268_]]
==== B.1 Gist의 특징

[[_269_]]
==== B.2 Gist 작성

[[_270_]]
==== UI 설명

[[_271_]]
==== B.3 Gist 목록

[[_272_]]
==== Gist 메뉴

[[_273_]]
==== 파일 메뉴

[[_274_]]
==== B.4 Your Gists

[[_275_]]
==== B.5 정리
